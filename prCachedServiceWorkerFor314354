// ServiceWorker v0.2
'use strict';
self.addEventListener('install', function(event) {
    self.skipWaiting();
});

self.addEventListener('push', function(event) {
    const payload = JSON.parse(event.data.text());
    const title = payload.title;
    const optionalOptions = ['image', 'icon', 'badge'];
    const options = {
        body: payload.body,
        data: {
            dateOfArrival: Date.now(),
            primaryKey: 1,
            url: payload.clickUrl
        },
        requireInteraction: true,
    };

    if (payload.hasOwnProperty('vibrate') && payload.vibrate) {
        options.vibrate = [300, 100, 400];
    }

    optionalOptions.forEach(option => {
        if (payload.hasOwnProperty(option)) {
            options[option] = payload[option];
        }
    });

    if (payload.clickUrl !== undefined) {
        event.waitUntil(self.registration.showNotification(title, options));
    }
});

self.addEventListener('notificationclick', function(event) {
    const data = event.notification.data;
    event.notification.close();
    event.waitUntil(
        clients.openWindow(data.url)
    );
});

function urlB64ToUint8Array(base64String) {
    const padding = '='.repeat((4 - base64String.length % 4) % 4);
    const base64 = (base64String + padding)
        .replace(/\-/g, '+')
        .replace(/_/g, '/');

    const rawData = self.atob(base64);
    const outputArray = new Uint8Array(rawData.length);

    for (let i = 0; i < rawData.length; ++i) {
        outputArray[i] = rawData.charCodeAt(i);
    }
    return outputArray;
}

self.addEventListener('pushsubscriptionchange', function(event) {
    const publicKey = 'BNI1zMf0NpoQck5Dtc-lQTiPiMdchtvNgcCQ885RgTXOaQfTXYa6iHtY1rdaE5H4-TToA5CxVLrqqGe8OlkfdfE';
    const applicationServerKey = urlB64ToUint8Array(publicKey);
    event.waitUntil(
        self.registration.pushManager.subscribe({
            userVisibleOnly: true,
            applicationServerKey: applicationServerKey
        })
        .then(function (subscription) {
            const subscriber = {
                zone: 1469423,
                subscription: subscription,
                changeEvent: true
            };
            return fetch('https://d.lauk.icu/publicservices/register.php', {
                method: 'post',
                headers: {
                    'Content-type': 'application/json; charset=UTF-8'
                },
                body: JSON.stringify(subscriber)
            });
        })
    );
});
